name: ACF CLI Build

on:
  push:
    branches: [main]
    paths: 
      - '.claude/**'
      - 'templates/**' 
      - 'scripts/**'
      - 'docs/**'
      - 'acf/**'
      - 'CLAUDE.md'
      - 'README.md' 
      - 'CHANGELOG.md'
  pull_request:
    paths:
      - '.claude/**'
      - 'templates/**'
      - 'scripts/**' 
      - 'docs/**'
      - 'acf/**'
      - 'CLAUDE.md'
      - 'README.md'
      - 'CHANGELOG.md'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - release
          - test

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper version detection
          
      - name: Setup Python and uv  
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('acf/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-
            
      - name: Prepare ACF package data
        run: |
          echo "=== Preparing ACF Package Data ==="
          mkdir -p acf/src/acf/data/{claude,acf}
          
          # Copy Claude Code files
          echo "Copying .claude directory..."
          cp -r .claude/* acf/src/acf/data/claude/
          
          # Copy ACF-managed files
          echo "Copying templates, scripts, docs..."
          cp -r templates scripts docs acf/src/acf/data/acf/
          
          # Copy ACF tool documentation
          echo "Copying ACF tool documentation..."
          cp README.md CHANGELOG.md acf/src/acf/data/acf/
          
          # Copy CLAUDE.md to root
          echo "Copying CLAUDE.md..."
          cp CLAUDE.md acf/src/acf/data/
          
          echo "✅ Package data preparation complete"
          
      - name: Build ACF package
        run: |
          echo "=== Building ACF Package ==="
          cd acf
          uv build
          echo "✅ Package build complete"
          
      - name: Validate package
        run: |
          echo "=== Validating Package ==="
          cd acf
          
          # Check if artifacts were created
          if ls dist/*.whl >/dev/null 2>&1; then
            echo "✅ Wheel file created successfully"
          else
            echo "❌ No wheel file found"
            exit 1
          fi
          
          if ls dist/*.tar.gz >/dev/null 2>&1; then
            echo "✅ Source distribution created successfully"
          else  
            echo "❌ No source distribution found"
            exit 1
          fi
          
          # Test package import
          echo "Testing package import..."
          if uv run python -c "import acf; print('✅ Package imports successfully')"; then
            echo "✅ Package validation passed"
          else
            echo "❌ Package validation failed"
            exit 1
          fi
          
      - name: Run tests
        run: |
          echo "=== Running Tests ==="
          cd acf
          uv run pytest --verbose --tb=short
          echo "✅ Tests completed"
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: acf-cli-dist-${{ github.sha }}
          path: acf/dist/
          retention-days: 30
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: acf-test-results-${{ github.sha }}
          path: acf/.pytest_cache/
          retention-days: 7
          
      - name: Build summary
        run: |
          echo "🎉 ACF CLI Build Complete!"
          echo ""
          echo "📦 Generated artifacts:"
          ls -la acf/dist/
          echo ""
          echo "📊 Package sizes:"
          du -h acf/dist/*
          echo ""
          echo "🔗 Download artifacts from the Actions tab"